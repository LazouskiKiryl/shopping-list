{"version":3,"sources":["api/hosts.js","api/AuthService.js","store/reducers/userReducer.js","utils/validators.js","components/UI/Button/Button.jsx","components/Forms/TextFiels/TextField.jsx","components/Forms/LoginForm.jsx","components/Forms/RegistrationForm.jsx","pages/Auth/Auth.jsx","api/DataService.js","store/reducers/dataReducer.js","store/reducers/index.js","store/index.js","api/DataUpdater.js","hooks/useOutsideClick.js","components/Lists/ListForm/ListForm.jsx","components/UI/IconButton/icons/index.js","components/UI/IconButton/IconButton.jsx","components/Lists/ListItem/EditableListItem.jsx","components/Lists/ListItem/ListItem.jsx","components/Lists/Lists.jsx","components/PurchaseList/PurchaseForm/PurchaseForm.jsx","components/PurchaseList/PurchaseItem/EditablePurchaseItem.jsx","components/PurchaseList/PurchaseItem/PurchaseItem.jsx","components/PurchaseList/PurchaseList.jsx","components/UI/Loader/Loader.jsx","router/index.js","pages/ShoppingList/ShoppingList.jsx","components/AppRouter/AppRouter.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["API_URL","$host","axios","create","baseURL","$authHost","interceptors","request","use","config","accessToken","localStorage","getItem","headers","AuthService","get","response","data","username","password","post","SET_USER","REMOVE_USER","initialState","isAuth","name","setUser","user","type","removeUser","userReducer","state","action","validateUsername","value","trim","length","validatePassword","Button","children","variant","visible","props","classes","classNames","button","button_primary","button_secondary","button_transparent","hidden","className","TextField","initialValue","placeholder","disabled","validate","onUpdate","useState","setValue","hint","setHint","inputClasses","onChange","e","newValue","target","onBlur","LoginForm","loading","setLoading","error","setError","isValid","setUsername","setPassword","dispatch","useDispatch","handleSubmit","event","a","preventDefault","login","authData","token","setItem","errorMessage","message","submitButtonTitle","onClick","to","RegistrationForm","registration","Auth","pathname","useLocation","isLogin","isSignup","DataService","title","count","listId","purchase","id","done","put","delete","SET_IS_LOADING","SET_IS_UPDATING","SET_LISTS","ADD_LIST","UPDATE_LIST","DELETE_LIST","SET_PURCHASES","ADD_PURCHASE","UPDATE_PURCHASE","DELETE_PURCHASE","isLoading","isUpdating","lists","purchases","setIsLoading","setIsUpdating","setLists","updateList","list","setPurchases","updatePurchase","dataReducer","updatedPurchase","map","filter","updatedList","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","requestCount","requestStart","sendRequest","setTimeout","DataUpdater","uuid","addList","createList","deleteList","addPurchase","createPurchase","deletePurchase","useOutsideClick","elementRef","handler","attached","latestHandler","useRef","useLayoutEffect","current","useEffect","handleClick","contains","document","addEventListener","removeEventListener","ListForm","onCreate","isOpen","setIsOpen","setTitle","formRef","titleRef","ref","autoFocus","focus","okIcon","xmlns","height","viewBox","width","fill","d","iconsMap","close","edit","more","ok","defaultIcon","IconButton","typeIcon","icon","EditableListItem","onCancel","endEdit","ListItem","active","onDelete","isEdit","setIsEdit","exact","Lists","activeList","history","useHistory","listIndex","findIndex","prevListId","replace","listItems","isEmptyList","PurchaseForm","setCount","scrollIntoView","behavior","block","inputsClasses","EditingPurchaseItem","PurchaseItem","EditablePurchaseItem","checked","PurchaseList","donePurchases","setDonePurchases","showDone","setShowDone","allPurchases","useSelector","listTitle","listPurchases","purchaseItems","donePurchaseItems","isEmptyDoneList","titleToggleButton","show","roll","preserveAspectRatio","cx","cy","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","Loader","publicRoutes","path","component","privateRoutes","useParams","find","fetchData","then","finally","AppRouter","check","catch","route","Header","removeItem","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9dc699b1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'https://kopyl.herokuapp.com/';\r\n\r\nconst $host = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nconst $authHost = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nconst authInterceptor = (config) => {\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  if (accessToken) {\r\n    config.headers['x-access-token'] = accessToken;\r\n  }\r\n  return config;\r\n};\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport { $host, $authHost };\r\n","import { $host, $authHost } from './hosts';\r\n\r\nclass AuthService {\r\n  static async check() {\r\n    const response = await $authHost.get('/auth/check');\r\n    return response.data;\r\n  }\r\n\r\n  static async registration(username, password) {\r\n    const response = await $host.post('/auth/registration', { username, password });\r\n    return response.data;\r\n  }\r\n\r\n  static async login(username, password) {\r\n    const response = await $host.post('/auth/login', { username, password });\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","const SET_USER = 'USER:SET_USER';\r\nconst REMOVE_USER = 'USER:REMOVE_USER';\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  name: 'Test 1',\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        name: action.user.name,\r\n      };\r\n    case REMOVE_USER:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        name: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: SET_USER,\r\n    user,\r\n  };\r\n};\r\n\r\nexport const removeUser = () => {\r\n  return {\r\n    type: REMOVE_USER,\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n","const validateUsername = (value) => {\r\n  if (value.trim() === '') {\r\n    return 'Введите имя пользователя';\r\n  } else if (value.length < 3 || value.length > 20) {\r\n    return 'Имя пользователя должно содержать от 3 до 20 символов';\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nconst validatePassword = (value) => {\r\n  if (value.trim() === '') {\r\n    return 'Введите пароль';\r\n  } else if (value.length < 5 || value.length > 30) {\r\n    return 'Имя пользователя должно содержать от 5 до 30 символов';\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport { validateUsername, validatePassword };\r\n","import React from 'react';\r\nimport './Button.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst Button = ({ children, variant = 'primary', visible = true, ...props }) => {\r\n  const classes = classNames({\r\n    button: true,\r\n    button_primary: variant === 'primary',\r\n    button_secondary: variant === 'secondary',\r\n    button_transparent: variant === 'transparent',\r\n    hidden: !visible,\r\n  });\r\n\r\n  return (\r\n    <button className={classes} {...props}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import classNames from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({\r\n  type = 'text',\r\n  initialValue = '',\r\n  placeholder = '',\r\n  disabled = false,\r\n  validate,\r\n  onUpdate,\r\n}) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [hint, setHint] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setValue(newValue);\r\n    setHint('');\r\n\r\n    onUpdate(newValue, true);\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const hint = validate(value);\r\n    setHint(hint);\r\n\r\n    const isValid = hint === '';\r\n\r\n    onUpdate(value, isValid);\r\n  };\r\n\r\n  const inputClasses = classNames({\r\n    'text-field__input': true,\r\n    'text-field__input_invalid': hint,\r\n  });\r\n\r\n  return (\r\n    <div className=\"text-field\">\r\n      <input\r\n        className={inputClasses}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        disabled={disabled}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n      <p className=\"text-field__hint\">{hint}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../../api/AuthService';\r\nimport { setUser } from '../../store/reducers/userReducer';\r\nimport { validatePassword, validateUsername } from '../../utils/validators';\r\nimport Button from '../UI/Button/Button';\r\nimport './Form.scss';\r\nimport TextField from './TextFiels/TextField';\r\n\r\nconst LoginForm = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [username, setUsername] = useState({ value: '', isValid: true });\r\n  const [password, setPassword] = useState({ value: '', isValid: true });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!username.isValid || !password.isValid) return;\r\n\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const authData = await AuthService.login(username.value, password.value);\r\n      const { user, token } = authData;\r\n      dispatch(setUser(user));\r\n      localStorage.setItem('accessToken', token);\r\n    } catch (e) {\r\n      const errorMessage = e.response?.data?.message || e.message;\r\n      setLoading(false);\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  const updateUsername = (username, isValid) => {\r\n    setUsername({ value: username, isValid });\r\n    setError('');\r\n  };\r\n\r\n  const updatePassword = (password, isValid) => {\r\n    setPassword({ value: password, isValid });\r\n    setError('');\r\n  };\r\n\r\n  const submitButtonTitle = loading ? 'Выполняется вход' : 'Войти';\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      {error && <p className=\"form__error\">{error}</p>}\r\n      <TextField\r\n        initialValue={username.value}\r\n        placeholder=\"Имя пользователя\"\r\n        disabled={loading}\r\n        validate={validateUsername}\r\n        onUpdate={updateUsername}\r\n      />\r\n      <TextField\r\n        type=\"password\"\r\n        initialValue={password.value}\r\n        placeholder=\"Пароль\"\r\n        disabled={loading}\r\n        validate={validatePassword}\r\n        onUpdate={updatePassword}\r\n      />\r\n      <Button onClick={handleSubmit} disabled={loading}>\r\n        {submitButtonTitle}\r\n      </Button>\r\n      <Link className=\"form__link\" to=\"/signup\">\r\n        Зарегистрироваться\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../../api/AuthService';\r\nimport { setUser } from '../../store/reducers/userReducer';\r\nimport { validatePassword, validateUsername } from '../../utils/validators';\r\nimport Button from '../UI/Button/Button';\r\nimport './Form.scss';\r\nimport TextField from './TextFiels/TextField';\r\n\r\nconst RegistrationForm = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [username, setUsername] = useState({ value: '', isValid: false });\r\n  const [password, setPassword] = useState({ value: '', isValid: false });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const authData = await AuthService.registration(username.value, password.value);\r\n      const { user, token } = authData;\r\n      dispatch(setUser(user));\r\n      localStorage.setItem('accessToken', token);\r\n    } catch (e) {\r\n      const errorMessage = e.response?.data?.message || e.message;\r\n      setError(errorMessage);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUsername = (username, isValid) => {\r\n    setUsername({ value: username, isValid });\r\n    setError('');\r\n  };\r\n\r\n  const updatePassword = (password, isValid) => {\r\n    setPassword({ value: password, isValid });\r\n    setError('');\r\n  };\r\n\r\n  const submitButtonTitle = loading ? 'Выполняется регистрация' : 'Зарегистрироваться';\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      {error && <p className=\"form__error\">{error}</p>}\r\n      <TextField\r\n        initialValue={username.value}\r\n        placeholder=\"Имя пользователя\"\r\n        disabled={loading}\r\n        validate={validateUsername}\r\n        onUpdate={updateUsername}\r\n      />\r\n      <TextField\r\n        type=\"password\"\r\n        initialValue={password.value}\r\n        placeholder=\"Пароль\"\r\n        disabled={loading}\r\n        validate={validatePassword}\r\n        onUpdate={updatePassword}\r\n      />\r\n      <Button onClick={handleSubmit} disabled={loading}>\r\n        {submitButtonTitle}\r\n      </Button>\r\n      <Link className=\"form__link\" to=\"/login\">\r\n        Войти\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport LoginForm from '../../components/Forms/LoginForm';\r\nimport RegistrationForm from '../../components/Forms/RegistrationForm';\r\nimport './Auth.scss';\r\n\r\nconst Auth = () => {\r\n  const { pathname } = useLocation();\r\n  const isLogin = pathname === '/login';\r\n  const isSignup = pathname === '/signup';\r\n\r\n  return (\r\n    <div className=\"auth container center\">\r\n      {isLogin && <LoginForm />}\r\n      {isSignup && <RegistrationForm />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { $authHost } from './hosts';\r\n\r\nclass DataService {\r\n  static fetchData() {\r\n    return $authHost.get('/data/');\r\n  }\r\n\r\n  static createPurchase(title, count, listId) {\r\n    return $authHost.post('/data/purchase', { title, count, listId });\r\n  }\r\n\r\n  static updatePurchase(purchase) {\r\n    const { id, title, count, done } = purchase;\r\n    return $authHost.put(`/data/purchase/${id}`, { title, count, done });\r\n  }\r\n\r\n  static deletePurchase(id) {\r\n    return $authHost.delete(`/data/purchase/${id}`);\r\n  }\r\n\r\n  static createList(title) {\r\n    return $authHost.post('/data/list/', { title });\r\n  }\r\n\r\n  static updateList(id, title) {\r\n    return $authHost.put(`/data/list/${id}`, { title });\r\n  }\r\n\r\n  static deleteList(id) {\r\n    return $authHost.delete(`/data/list/${id}`);\r\n  }\r\n}\r\n\r\nexport default DataService;\r\n","import DataService from '../../api/DataService';\r\n\r\nconst SET_IS_LOADING = 'DATA:SET_IS_LOADING';\r\nconst SET_IS_UPDATING = 'DATA:SET_IS_UPDATING';\r\n\r\nconst SET_LISTS = 'DATA:SET_LISTS';\r\nconst ADD_LIST = 'DATA:ADD_LIST';\r\nconst UPDATE_LIST = 'DATA:UPDATE_LIST';\r\nconst DELETE_LIST = 'DATA:DELETE_LIST';\r\n\r\nconst SET_PURCHASES = 'DATA:SET_PURCHASES';\r\nconst ADD_PURCHASE = 'DATA:ADD_PURCHASE';\r\nconst UPDATE_PURCHASE = 'DATA:UPDATE_PURCHASE';\r\nconst DELETE_PURCHASE = 'DATA:DELETE_PURCHASE';\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  isUpdating: false,\r\n  lists: [], // id, title\r\n  purchases: [], // id, listId, title, count, done, time\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    case SET_IS_UPDATING:\r\n      return {\r\n        ...state,\r\n        isUpdating: action.isUpdating,\r\n      };\r\n    case SET_PURCHASES:\r\n      return {\r\n        ...state,\r\n        purchases: action.purchases,\r\n      };\r\n    case ADD_PURCHASE:\r\n      return {\r\n        ...state,\r\n        purchases: [...state.purchases, action.purchase],\r\n      };\r\n    case UPDATE_PURCHASE:\r\n      const updatedPurchase = { ...action.purchase };\r\n      if (action.id) {\r\n        updatedPurchase.id = action.id;\r\n      }\r\n      return {\r\n        ...state,\r\n        purchases: state.purchases.map((purchase) =>\r\n          purchase.id !== action.purchase.id ? purchase : updatedPurchase\r\n        ),\r\n      };\r\n    case DELETE_PURCHASE:\r\n      return {\r\n        ...state,\r\n        purchases: state.purchases.filter((purchase) => purchase.id !== action.id),\r\n      };\r\n    case SET_LISTS:\r\n      return {\r\n        ...state,\r\n        lists: action.lists,\r\n      };\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        lists: [...state.lists, action.list],\r\n      };\r\n    case UPDATE_LIST:\r\n      const updatedList = { ...action.list };\r\n      if (action.id) {\r\n        updatedList.id = action.id;\r\n      }\r\n      return {\r\n        ...state,\r\n        lists: state.lists.map((list) => (list.id !== action.list.id ? list : updatedList)),\r\n      };\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        lists: state.lists.filter((list) => list.id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setIsLoading = (isLoading) => ({ type: SET_IS_LOADING, isLoading });\r\nexport const setIsUpdating = (isUpdating) => ({ type: SET_IS_UPDATING, isUpdating });\r\n\r\nexport const setLists = (lists) => ({ type: SET_LISTS, lists });\r\nexport const addList = (list) => ({ type: ADD_LIST, list });\r\nexport const updateList = (list, id) => ({ type: UPDATE_LIST, list, id });\r\nexport const deleteList = (id) => ({ type: DELETE_LIST, id });\r\n\r\nexport const setPurchases = (purchases) => ({ type: SET_PURCHASES, purchases });\r\nexport const addPurchase = (purchase) => ({ type: ADD_PURCHASE, purchase });\r\nexport const updatePurchase = (purchase, id) => ({ type: UPDATE_PURCHASE, purchase, id });\r\nexport const deletePurchase = (id) => ({ type: DELETE_PURCHASE, id });\r\n\r\nexport function fetchData() {\r\n  return (dispatch) => {\r\n    dispatch(setIsLoading(true));\r\n    DataService.fetchData()\r\n      .then((response) => {\r\n        dispatch(setLists(response.data.lists));\r\n        dispatch(setPurchases(response.data.purchases));\r\n      })\r\n      .finally(() => dispatch(setIsLoading(false)));\r\n  };\r\n}\r\n\r\nexport default dataReducer;\r\n","import { combineReducers } from 'redux';\r\nimport dataReducer from './dataReducer';\r\nimport userReducer from './userReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n  data: dataReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import { v4 as uuid } from 'uuid';\r\nimport { store } from '../store';\r\nimport {\r\n  addList,\r\n  addPurchase,\r\n  deleteList,\r\n  deletePurchase,\r\n  setIsUpdating,\r\n  updateList,\r\n  updatePurchase,\r\n} from '../store/reducers/dataReducer';\r\nimport DataService from './DataService';\r\n\r\nlet requestCount = 0;\r\n\r\nconst requestStart = () => {\r\n  if (requestCount === 0) {\r\n    store.dispatch(setIsUpdating(true));\r\n  }\r\n  requestCount++;\r\n};\r\n\r\nconst requestEnd = () => {\r\n  requestCount--;\r\n  if (requestCount === 0) {\r\n    store.dispatch(setIsUpdating(false));\r\n  }\r\n};\r\n\r\nconst sendRequest = async (request) => {\r\n  try {\r\n    await request();\r\n    requestEnd();\r\n  } catch (e) {\r\n    setTimeout(() => {\r\n      sendRequest(request);\r\n    }, 2000);\r\n  }\r\n};\r\n\r\nclass DataUpdater {\r\n  static addList(title) {\r\n    const tempId = uuid();\r\n    const list = { id: tempId, title };\r\n    requestStart();\r\n    store.dispatch(addList(list));\r\n\r\n    sendRequest(async () => {\r\n      const response = await DataService.createList(title);\r\n      store.dispatch(updateList(list, response.data.id));\r\n    });\r\n  }\r\n\r\n  static updateList(id, title) {\r\n    requestStart();\r\n    store.dispatch(updateList({ id, title }));\r\n\r\n    sendRequest(async () => {\r\n      await DataService.updateList(id, title);\r\n    });\r\n  }\r\n\r\n  static deleteList(id) {\r\n    requestStart();\r\n    store.dispatch(deleteList(id));\r\n\r\n    sendRequest(async () => {\r\n      await DataService.deleteList(id);\r\n    });\r\n  }\r\n\r\n  static addPurchase(title, count, listId) {\r\n    const tempId = uuid();\r\n    const purchase = { id: tempId, title, count, listId };\r\n    requestStart();\r\n    store.dispatch(addPurchase(purchase));\r\n\r\n    sendRequest(async () => {\r\n      const response = await DataService.createPurchase(title, count, listId);\r\n      store.dispatch(updatePurchase(purchase, response.data.id));\r\n    });\r\n  }\r\n\r\n  static updatePurchase(purchase) {\r\n    requestStart();\r\n    store.dispatch(updatePurchase(purchase));\r\n\r\n    sendRequest(async () => {\r\n      await DataService.updatePurchase(purchase);\r\n    });\r\n  }\r\n\r\n  static deletePurchase(id) {\r\n    requestStart();\r\n    store.dispatch(deletePurchase(id));\r\n\r\n    sendRequest(async () => {\r\n      await DataService.deletePurchase(id);\r\n    });\r\n  }\r\n}\r\n\r\nexport default DataUpdater;\r\n","import { useEffect, useLayoutEffect, useRef } from 'react';\r\n\r\nconst useOutsideClick = (elementRef, handler, attached = true) => {\r\n  const latestHandler = useRef(handler);\r\n\r\n  useLayoutEffect(() => {\r\n    latestHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    if (!attached) return;\r\n\r\n    const handleClick = (e) => {\r\n      if (elementRef.current && !elementRef.current.contains(e.target)) {\r\n        latestHandler.current();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClick);\r\n    };\r\n  }, [elementRef, attached]);\r\n};\r\n\r\nexport default useOutsideClick;\r\n","import React, { useRef, useState } from 'react';\r\nimport useOutsideClick from '../../../hooks/useOutsideClick';\r\nimport Button from '../../UI/Button/Button';\r\nimport './ListForm.scss';\r\n\r\nconst ListForm = ({ onCreate }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const formRef = useRef();\r\n  const titleRef = useRef();\r\n\r\n  const outsideClickHandler = () => {\r\n    if (title.trim() !== '') {\r\n      onCreate(title);\r\n    }\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useOutsideClick(formRef, outsideClickHandler, isOpen);\r\n\r\n  const handleStart = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTitle('');\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (title.trim() === '') {\r\n      titleRef.current.focus();\r\n    } else {\r\n      onCreate(title);\r\n      setTitle('');\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"list-form\" ref={formRef}>\r\n      {isOpen && (\r\n        <input\r\n          className=\"list-form__title\"\r\n          ref={titleRef}\r\n          type=\"text\"\r\n          value={title}\r\n          placeholder=\"Введите название списка\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          autoFocus\r\n        />\r\n      )}\r\n      <div className=\"list-form__buttons\">\r\n        <Button visible={isOpen} onClick={handleCreate}>\r\n          Добавить список\r\n        </Button>\r\n        <Button visible={isOpen} onClick={handleCancel}>\r\n          Отмена\r\n        </Button>\r\n        <Button visible={!isOpen} onClick={handleStart}>\r\n          Добавить список\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ListForm;\r\n","export const okIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"18px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"18px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" />\r\n  </svg>\r\n);\r\n\r\nexport const closeIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"18px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"18px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\r\n  </svg>\r\n);\r\n\r\nexport const deleteIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"18px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"18px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n  </svg>\r\n);\r\n\r\nexport const editIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"18px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"18px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\" />\r\n  </svg>\r\n);\r\n\r\nexport const moreIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"18px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"18px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n  </svg>\r\n);\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport './IconButton.scss';\r\nimport { closeIcon, deleteIcon, editIcon, moreIcon, okIcon } from './icons';\r\n\r\nconst iconsMap = {\r\n  close: closeIcon,\r\n  delete: deleteIcon,\r\n  edit: editIcon,\r\n  more: moreIcon,\r\n  ok: okIcon,\r\n};\r\n\r\nconst defaultIcon = okIcon;\r\n\r\nconst IconButton = ({ typeIcon, variant = 'dark', ...props }) => {\r\n  const icon = iconsMap[typeIcon] || defaultIcon;\r\n\r\n  const classes = classNames({\r\n    'icon-button': true,\r\n    'icon-button_dark': variant === 'dark',\r\n    'icon-button_light': variant === 'light',\r\n  });\r\n\r\n  return (\r\n    <button className={classes} {...props}>\r\n      {icon}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport useOutsideClick from '../../../hooks/useOutsideClick';\r\nimport IconButton from '../../UI/IconButton/IconButton';\r\n\r\nconst EditableListItem = ({ list, onUpdate, onCancel }) => {\r\n  const [title, setTitle] = useState(list.title);\r\n  const formRef = useRef();\r\n  const titleRef = useRef();\r\n\r\n  useEffect(() => {\r\n    titleRef.current.focus();\r\n  }, []);\r\n\r\n  const endEdit = () => {\r\n    if (title !== list.title) {\r\n      onUpdate({ title });\r\n    } else {\r\n      onCancel();\r\n    }\r\n  };\r\n\r\n  useOutsideClick(formRef, endEdit);\r\n\r\n  const handleEndEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    endEdit();\r\n  };\r\n\r\n  const handleCancelEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <form className=\"list-item list-item_edit\" ref={formRef}>\r\n      <div className=\"list-item__content\">\r\n        <input\r\n          className=\"list-item__title list-item__title_edit\"\r\n          ref={titleRef}\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"list-item__buttons\">\r\n        <IconButton typeIcon=\"ok\" onClick={handleEndEdit} />\r\n        <IconButton typeIcon=\"close\" onClick={handleCancelEdit} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditableListItem;\r\n","import classNames from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DataUpdater from '../../../api/DataUpdater';\r\nimport IconButton from '../../UI/IconButton/IconButton';\r\nimport EditableListItem from './EditableListItem';\r\nimport './ListItem.scss';\r\n\r\nconst ListItem = ({ list, active, onDelete }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const handleStartEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const endEditAndUpdate = ({ title }) => {\r\n    DataUpdater.updateList(list.id, title);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  if (isEdit) {\r\n    return <EditableListItem list={list} onUpdate={endEditAndUpdate} onCancel={cancelEdit} />;\r\n  }\r\n\r\n  const classes = classNames({\r\n    'list-item': true,\r\n    'list-item_active': active,\r\n  });\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"list-item__content\">\r\n        <NavLink to={`/list/${list.id || ''}`} className=\"list-item__title\" exact>\r\n          {list.title}\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"list-item__buttons\">\r\n        <IconButton typeIcon=\"edit\" onClick={handleStartEdit} />\r\n        <IconButton typeIcon=\"delete\" onClick={() => onDelete(list.id)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DataUpdater from '../../api/DataUpdater';\r\nimport ListForm from './ListForm/ListForm';\r\nimport ListItem from './ListItem/ListItem';\r\nimport './Lists.scss';\r\n\r\nconst Lists = ({ lists, activeList }) => {\r\n  const history = useHistory();\r\n\r\n  const onCreate = (title) => {\r\n    DataUpdater.addList(title);\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    DataUpdater.deleteList(id);\r\n\r\n    if (activeList.id !== id) return;\r\n\r\n    const listIndex = lists.findIndex((list) => list === activeList);\r\n    const prevListId = lists[listIndex - 1]?.id;\r\n\r\n    if (prevListId) {\r\n      history.replace('/list/' + prevListId);\r\n    } else {\r\n      history.replace('/list');\r\n    }\r\n  };\r\n\r\n  const listItems = lists.map((list) => {\r\n    return <ListItem key={list.id} list={list} active={list === activeList} onDelete={onDelete} />;\r\n  });\r\n\r\n  const isEmptyList = listItems.length === 0;\r\n  return (\r\n    <div className=\"lists\">\r\n      {isEmptyList ? <p className=\"lists__message\">Добавьте свой первый список</p> : listItems}\r\n      <ListForm onCreate={onCreate} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import classNames from 'classnames';\r\nimport React, { useLayoutEffect, useRef, useState } from 'react';\r\nimport useOutsideClick from '../../../hooks/useOutsideClick';\r\nimport Button from '../../UI/Button/Button';\r\nimport './PurchaseForm.scss';\r\n\r\nconst PurchaseForm = ({ onCreate }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [count, setCount] = useState('');\r\n  const formRef = useRef(null);\r\n  const titleRef = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (isOpen) {\r\n      formRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  });\r\n\r\n  const outsideClickHandler = () => {\r\n    if (title.trim() !== '') {\r\n      onCreate(title, count);\r\n    }\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useOutsideClick(formRef, outsideClickHandler, isOpen);\r\n\r\n  const handleStart = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTitle('');\r\n    setCount('');\r\n    setIsOpen(true);\r\n\r\n    titleRef.current.focus();\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (title.trim() !== '') {\r\n      onCreate(title, count);\r\n      setTitle('');\r\n      setCount('');\r\n    }\r\n\r\n    titleRef.current.focus();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const inputsClasses = classNames({\r\n    'purchase-form__inputs': true,\r\n    'purchase-form__inputs_hidden': !isOpen,\r\n  });\r\n\r\n  return (\r\n    <form className=\"purchase-form\" ref={formRef}>\r\n      <div className={inputsClasses}>\r\n        <input\r\n          className=\"purchase-form__title\"\r\n          ref={titleRef}\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Введите название покупки\"\r\n        />\r\n        <input\r\n          className=\"purchase-form__count\"\r\n          type=\"text\"\r\n          value={count}\r\n          onChange={(e) => setCount(e.target.value)}\r\n          placeholder=\"Количество\"\r\n        />\r\n      </div>\r\n      <div className=\"purchase-form__buttons\">\r\n        <Button visible={isOpen} onClick={handleCreate}>\r\n          Добавить покупку\r\n        </Button>\r\n        <Button visible={isOpen} onClick={handleCancel}>\r\n          Отмена\r\n        </Button>\r\n        <Button visible={!isOpen} onClick={handleStart}>\r\n          Добавить покупку\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PurchaseForm;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport useOutsideClick from '../../../hooks/useOutsideClick';\r\nimport IconButton from '../../UI/IconButton/IconButton';\r\n\r\nconst EditingPurchaseItem = ({ purchase, onUpdate, onCancel }) => {\r\n  const [title, setTitle] = useState(purchase.title);\r\n  const [count, setCount] = useState(purchase.count);\r\n  const formRef = useRef();\r\n  const titleRef = useRef();\r\n\r\n  useEffect(() => {\r\n    titleRef.current.focus();\r\n  }, []);\r\n\r\n  const endEdit = () => {\r\n    if (title !== purchase.title || count !== purchase.count) {\r\n      onUpdate({ title, count });\r\n    } else {\r\n      onCancel();\r\n    }\r\n  };\r\n\r\n  useOutsideClick(formRef, endEdit);\r\n\r\n  const handleEndEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    endEdit();\r\n  };\r\n\r\n  const handleCancelEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <form className=\"purchase-item purchase-item_active\" ref={formRef}>\r\n      <div className=\"purchase-item__content\">\r\n        <input\r\n          className=\"purchase-item__title\"\r\n          ref={titleRef}\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"purchase-item__count\"\r\n          type=\"text\"\r\n          value={count}\r\n          onChange={(e) => setCount(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"purchase-item__buttons purchase-item__buttons_visible\">\r\n        <IconButton typeIcon=\"ok\" onClick={handleEndEdit} />\r\n        <IconButton typeIcon=\"close\" onClick={handleCancelEdit} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditingPurchaseItem;\r\n","import React, { useState } from 'react';\r\nimport DataUpdater from '../../../api/DataUpdater';\r\nimport IconButton from '../../UI/IconButton/IconButton';\r\nimport EditablePurchaseItem from './EditablePurchaseItem';\r\nimport './PurchaseItem.scss';\r\n\r\nconst PurchaseItem = ({ purchase }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const handleChecked = (e) => {\r\n    DataUpdater.updatePurchase({ ...purchase, done: e.target.checked });\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n\r\n    DataUpdater.deletePurchase(purchase.id);\r\n  };\r\n\r\n  const handleStartEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const endEditAndUpdate = ({ title, count }) => {\r\n    DataUpdater.updatePurchase({ ...purchase, title, count });\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  if (isEdit) {\r\n    return (\r\n      <EditablePurchaseItem purchase={purchase} onUpdate={endEditAndUpdate} onCancel={cancelEdit} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"purchase-item\">\r\n      <input\r\n        className=\"purchase-item__checkbox\"\r\n        type=\"checkbox\"\r\n        checked={purchase.done}\r\n        onChange={handleChecked}\r\n      />\r\n      <div className=\"purchase-item__content\">\r\n        <span className=\"purchase-item__title\">{purchase.title}</span>\r\n        <span className=\"purchase-item__count\">{purchase.count}</span>\r\n      </div>\r\n      <div className=\"purchase-item__buttons\">\r\n        <IconButton typeIcon=\"edit\" onClick={handleStartEdit} />\r\n        <IconButton typeIcon=\"delete\" onClick={handleDelete} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DataUpdater from '../../api/DataUpdater';\r\nimport Button from '../UI/Button/Button';\r\nimport PurchaseForm from './PurchaseForm/PurchaseForm';\r\nimport PurchaseItem from './PurchaseItem/PurchaseItem';\r\nimport './PurchaseList.scss';\r\n\r\nconst PurchaseList = ({ list }) => {\r\n  const [purchases, setPurchases] = useState([]);\r\n  const [donePurchases, setDonePurchases] = useState([]);\r\n  const [showDone, setShowDone] = useState(false);\r\n  const allPurchases = useSelector((state) => state.data.purchases);\r\n\r\n  const listTitle = list?.title;\r\n\r\n  const createPurchase = (title, count) => {\r\n    DataUpdater.addPurchase(title, count, list.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listPurchases = list\r\n      ? allPurchases.filter((purchase) => purchase.listId === list.id)\r\n      : allPurchases;\r\n\r\n    const purchases = listPurchases.filter((purchase) => !purchase.done);\r\n    setPurchases(purchases);\r\n\r\n    const donePurchases = listPurchases.filter((purchase) => purchase.done);\r\n    setDonePurchases(donePurchases);\r\n  }, [allPurchases, list]);\r\n\r\n  const handleToggleShow = (e) => {\r\n    e.preventDefault();\r\n\r\n    setShowDone((show) => !show);\r\n  };\r\n\r\n  const purchaseItems = purchases.map((purchase) => (\r\n    <PurchaseItem key={purchase.id} purchase={purchase} />\r\n  ));\r\n\r\n  const donePurchaseItems = donePurchases.map((purchase) => (\r\n    <PurchaseItem key={purchase.id} purchase={purchase} />\r\n  ));\r\n\r\n  const isEmptyList = purchaseItems.length === 0;\r\n  const isEmptyDoneList = donePurchaseItems.length === 0;\r\n  const titleToggleButton = showDone ? 'Скрыть' : 'Показать';\r\n\r\n  return (\r\n    <div className=\"purchase-list\">\r\n      <div className=\"purchase-list__section\">\r\n        <h3 className=\"purchase-list__title\">\r\n          {listTitle} <span className=\"purchase-list__count\">{purchaseItems.length}</span>\r\n        </h3>\r\n        {isEmptyList ? (\r\n          <p className=\"purchase-list__message\">Список пуст</p>\r\n        ) : (\r\n          <div className=\"purchase-list__list\">{purchaseItems}</div>\r\n        )}\r\n        <PurchaseForm onCreate={createPurchase} />\r\n      </div>\r\n      {!isEmptyDoneList && (\r\n        <div className=\"purchase-list__section\">\r\n          <div className=\"purchase-list__header\">\r\n            <h3 className=\"purchase-list__title purchase-list__title_done\">\r\n              Куплено <span className=\"purchase-list__count\">{donePurchaseItems.length}</span>\r\n            </h3>\r\n            <Button variant=\"secondary\" onClick={handleToggleShow}>\r\n              {titleToggleButton}\r\n            </Button>\r\n          </div>\r\n          {showDone && <div className=\"purchase-list__list\">{donePurchaseItems}</div>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseList;\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst roll = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18px\"\r\n    height=\"18px\"\r\n    viewBox=\"0 0 100 100\"\r\n    preserveAspectRatio=\"xMidYMid\"\r\n  >\r\n    <circle\r\n      cx=\"50\"\r\n      cy=\"50\"\r\n      fill=\"none\"\r\n      strokeWidth=\"15\"\r\n      r=\"30\"\r\n      strokeDasharray=\"141.37166941154067 49.12388980384689\"\r\n    >\r\n      <animateTransform\r\n        attributeName=\"transform\"\r\n        type=\"rotate\"\r\n        repeatCount=\"indefinite\"\r\n        dur=\"1s\"\r\n        values=\"0 50 50;360 50 50\"\r\n        keyTimes=\"0;1\"\r\n      ></animateTransform>\r\n    </circle>\r\n  </svg>\r\n);\r\n\r\nconst Loader = () => {\r\n  return <div className=\"loader\">{roll}</div>;\r\n};\r\n\r\nexport default Loader;\r\n","import Auth from '../pages/Auth/Auth';\r\nimport ShoppingList from '../pages/ShoppingList/ShoppingList';\r\n\r\nexport const publicRoutes = [\r\n  { path: '/login', component: Auth, exact: true },\r\n  { path: '/signup', component: Auth, exact: true },\r\n];\r\n\r\nexport const privateRoutes = [\r\n  { path: ['/list', '/list/:listId'], component: ShoppingList, exact: true },\r\n];\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Lists from '../../components/Lists/Lists';\r\nimport PurchaseList from '../../components/PurchaseList/PurchaseList';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { fetchData } from '../../store/reducers/dataReducer';\r\nimport './ShoppingList.scss';\r\n\r\nconst ShoppingList = () => {\r\n  const isLoading = useSelector((state) => state.data.isLoading);\r\n  const lists = useSelector((state) => state.data.lists);\r\n  const { listId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const activeList = listId ? lists.find((list) => list.id === listId) : null;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!listId && !isLoading && lists.length !== 0) {\r\n      history.replace('/list/' + lists[0].id);\r\n    }\r\n  }, [history, isLoading, listId, lists]);\r\n\r\n  return (\r\n    <div className=\"shopping-list container\">\r\n      {isLoading ? (\r\n        <div className=\"center\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"shopping-list__navigation\">\r\n            <Lists lists={lists} activeList={activeList} />\r\n          </div>\r\n          <div className=\"shopping-list__content\">\r\n            {activeList && <PurchaseList list={activeList} />}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport AuthService from '../../api/AuthService';\r\nimport { privateRoutes, publicRoutes } from '../../router';\r\nimport { setUser, removeUser } from '../../store/reducers/userReducer';\r\nimport Loader from '../UI/Loader/Loader';\r\n\r\nconst AppRouter = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const isAuth = useSelector((state) => state.user.isAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    AuthService.check()\r\n      .then(({ user, token }) => {\r\n        dispatch(setUser(user));\r\n        localStorage.setItem('accessToken', token);\r\n      })\r\n      .catch((e) => {\r\n        dispatch(removeUser());\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [dispatch]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container center\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isAuth ? (\r\n        <Switch>\r\n          {privateRoutes.map((route) => (\r\n            <Route key={route.path} {...route} />\r\n          ))}\r\n          <Redirect to=\"/list\" />\r\n        </Switch>\r\n      ) : (\r\n        <Switch>\r\n          {publicRoutes.map((route) => (\r\n            <Route key={route.path} {...route} />\r\n          ))}\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setIsLoading, setLists, setPurchases } from '../../store/reducers/dataReducer';\r\nimport { removeUser } from '../../store/reducers/userReducer';\r\nimport Button from '../UI/Button/Button';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  const isAuth = useSelector((state) => state.user.isAuth);\r\n  const username = useSelector((state) => state.user.name);\r\n  const isUpdating = useSelector((state) => state.data.isUpdating);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    dispatch(setPurchases([]));\r\n    dispatch(setLists([]));\r\n    dispatch(removeUser());\r\n    dispatch(setIsLoading(true));\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container container\">\r\n        <Link className=\"header__title\" to=\"/\">\r\n          Список попупок\r\n        </Link>\r\n        {isAuth && (\r\n          <div className=\"header__navigation\">\r\n            {isUpdating && <Loader />}\r\n            <span>{username}</span>\r\n            <Button variant=\"transparent\" onClick={handleLogout}>\r\n              Выйти\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport AppRouter from './components/AppRouter/AppRouter';\r\nimport Header from './components/Header/Header';\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Header />\r\n      <main className=\"main-container\">\r\n        <AppRouter />\r\n      </main>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}